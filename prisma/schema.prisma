generator client {
  provider = "prisma-client-js"
  previewFeatures = ["interactiveTransactions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model audit_records {
  id            BigInt              @id @default(autoincrement())
  action        String
  created_at    DateTime            @default(now()) @db.Timestamptz(6)
  data          Json
  origin_ip     Unsupported("cidr")
  resource_id   BigInt
  resource_type String
  user_id       BigInt
  users         users               @relation(fields: [user_id], references: [id], onUpdate: NoAction)
}

model idempotency_keys {
  id              BigInt    @id @default(autoincrement())
  created_at      DateTime  @default(now()) @db.Timestamptz(6)
  idempotency_key String
  last_run_at     DateTime  @default(now()) @db.Timestamptz(6)
  locked_at       DateTime? @default(now()) @db.Timestamptz(6)
  request_method  String
  request_params  Json
  request_path    String
  response_code   Int?
  response_body   Json?
  recovery_point  String
  user_id         BigInt
  users           users     @relation(fields: [user_id], references: [id], onUpdate: NoAction)
  rides           rides[]

  @@unique([user_id, idempotency_key], map: "idempotency_keys_user_id_idempotency_key")
}

model migrations {
  id     Int      @id @default(autoincrement())
  name   String   @db.VarChar(255)
  run_on DateTime @db.Timestamp(6)
}

model rides {
  id                 BigInt            @id @default(autoincrement())
  created_at         DateTime          @default(now()) @db.Timestamptz(6)
  idempotency_key_id BigInt?
  origin_lat         Decimal           @db.Decimal(13, 10)
  origin_lon         Decimal           @db.Decimal(13, 10)
  target_lat         Decimal           @db.Decimal(13, 10)
  target_lon         Decimal           @db.Decimal(13, 10)
  stripe_charge_id   String?           @unique
  user_id            BigInt
  idempotency_keys   idempotency_keys? @relation(fields: [idempotency_key_id], references: [id], onUpdate: NoAction)
  users              users             @relation(fields: [user_id], references: [id], onUpdate: NoAction)

  @@unique([user_id, idempotency_key_id], map: "rides_user_id_idempotency_key_unique")
}

model staged_jobs {
  id       BigInt @id @default(autoincrement())
  job_name String
  job_args Json
}

model users {
  id                 BigInt             @id @default(autoincrement())
  email              String             @unique
  stripe_customer_id String?
  audit_records      audit_records[]
  idempotency_keys   idempotency_keys[]
  rides              rides[]
}
